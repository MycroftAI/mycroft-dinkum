{
  // Definition and documentation of all variables used by mycroft-core.
  //
  // Settings seen here are considered DEFAULT.  Settings can also be
  // overridden at the REMOTE level (set by the user via
  // https://home.mycroft.ai), at the SYSTEM level (typically in the file
  // '/etc/mycroft/mycroft.conf'), or at the USER level (typically in the
  // file '~/.config/mycroft/mycroft.conf').
  //
  // The load order of settings is:
  //   DEFAULT
  //   REMOTE
  //   SYSTEM
  //   USER
  //
  // The Override: comments below indicates where these settings are generally
  // set outside of this file.  The load order is always followed, so an
  // individual systems can still apply changes at the SYSTEM or USER levels.

  // Language used for speech-to-text and text-to-speech.
  // Code is a BCP-47 identifier (https://tools.ietf.org/html/bcp47), lowercased
  // TODO: save unmodified, lowercase upon demand
  "lang": "en-us",

  // Measurement units, either 'metric' or 'english'
  // Override: REMOTE
  "system_unit": "metric",

  // Time format, either 'half' (e.g. "11:37 pm") or 'full' (e.g. "23:37")
  // Override: REMOTE
  "time_format": "half",

  // Date format, either 'MDY' (e.g. "11-29-1978") or 'DMY' (e.g. "29-11-1978")
  // Override: REMOTE
  "date_format": "MDY",

  // Play a beep when system begins to listen?
  "confirm_listening": false,

  // File locations of sounds to play for system events
  "sounds": {
    // Sound played when Mycroft wakes up
    "start_listening": "snd/start_listening.wav",

    // Sound played when voice command was recognized
    "acknowledge": "snd/acknowledge.wav",

    // Sound played when volume is changed
    "volume_change": "snd/blop-mark-diangelo.wav"
  },

  // Location where the system resides
  // NOTE: Although this is set here, an Enclosure can override the value.
  //       For example a mycroft-core running in a car could use the GPS.
  // Override: REMOTE
  "location": {
    "city": {
      "code": "Lawrence",
      "name": "Lawrence",
      "state": {
        "code": "KS",
        "name": "Kansas",
        "country": {
          "code": "US",
          "name": "United States"
        }
      }
    },
    "coordinate": {
      "latitude": 38.971669,
      "longitude": -95.23525
    },
    "timezone": {
      "code": "America/Chicago",
      "name": "Central Standard Time",
      "dstOffset": 3600000,
      "offset": -21600000
    }
  },

  // Also change in scripts/prepare-msm.sh
  "data_dir": "/opt/mycroft-dinkum",

  // General skill values
  "skills": {
    "upload_skill_manifest": true
  },

  // Address of the REMOTE server
  "server": {
    "url": "https://api.mycroft.ai",
    //"url": "https://api.mycroft-test.net",
    "version": "v1",
    "update": true,
    "metrics": false,
    "sync_skill_settings": true
  },

  // The mycroft-core messagebus websocket
  "websocket": {
    "host": "127.0.0.1",
    "port": 8181,
    "route": "/core",
    "ssl": false
  },

  // The GUI messagebus websocket.  Once port is created per connected GUI
  "gui_websocket": {
    "host": "127.0.0.1",
    "base_port": 18181,
    "route": "/gui",
    "ssl": false
  },

  // URIs to use for testing network connection.
  "network_tests": {
      "internet_check_url": "http://start.mycroft.ai/portal-check.html"
  },

  // Settings used by the wake-up-word listener
  // Override: REMOTE
  "listener": {
    "device_name": "default",
    "sample_rate": 16000,
    "sample_width": 2,
    "sample_channels": 1,
    // Set 'save_path' to configure the location of files stored if
    // 'record_wake_words' and/or 'save_utterances' are set to 'true'.
    // WARNING: Make sure that user 'mycroft' has write-access on the
    // directory!
    // "save_path": "/tmp",
    // Set 'record_wake_words' to save a copy of wake word triggers
    // as .wav files under: /'save_path'/mycroft_wake_words
    "record_wake_words": true,
    "wakeword_chunks_to_save": 15,

    // Set 'save_utterances' to save each sentence sent to STT -- by default
    // they are only kept briefly in-memory.  This can be useful for for
    // debugging or other custom purposes.  Recordings are saved
    // under: /'save_path'/mycroft_utterances/<TIMESTAMP>.wav
    "save_utterances": true,

    // Number of audio chunks to go back before wake word detection, and include
    // in saved utterance.
    "utterance_chunks_to_rewind": 2,

    // How much (if at all) to 'duck' the speaker output during listening.  A
    // setting of 0.0 will not duck at all.  A 1.0 will completely mute output
    // while in a listening state.  Values in between will lower the volume
    // partially (this is optional behavior, depending on the enclosure).
    "duck_while_listening" : 0.7,

    // Increase mic volume by multipler (audioop.mul)
    "multiplier": 1.0,

    "wake_word": "hey mycroft",

    // Settings used by microphone to set recording timeout
    "recording_timeout": 10.0,

    // Seconds of speech before voice command is considered started
    "speech_begin": 0.3,

    // Seconds of silence before voice command is considered ended
    "silence_end": 0.7,

    // Path to silero VAD model
    "vad_model": "model/silero_vad.onnx",

    // Threshold above which is considered speech (silero VAD)
    "vad_threshold": 0.5,

    // Bytes to send to hotword/STT per chunk
    "chunk_size": 4096,

    "period_size": 1024,
    // Bytes to read from the microphone at a time

    // Seconds to wait for audio chunk before restarting voice service
    "audio_timeout": 5,

    // Number of time to try opening/reading from microphone before giving up
    "audio_retries": 3,

    // Seconds between retries
    "audio_retry_delay": 1,

    // Chunks of silence to prepend before STT audio
    "audio_silence_chunks": 0,

    // Chunks to skip sending to STT after mycroft.mic.listen
    "stt_skip_chunks_after_listen": 0
  },

  // Hotword configurations
  "hotwords": {
    "hey mycroft": {
        "module": "precise",
        "phonemes": "HH EY . M AY K R AO F T",
        "threshold": 1e-90,
        "lang": "en-us"
        // Specify custom model via:
        // "local_model_file": "~/.local/share/mycroft/precise/models/something.pb"
        // Precise options:
        // "sensitivity": 0.4,  // Higher = more sensitive
        // "trigger_level": 3   // Higher = more delay & less sensitive
        }
  },

  // Mark 1 enclosure settings
  // Override: SYSTEM (e.g. Picroft)
  "enclosure": {
    // Platform name
    // Options: 'picroft', 'mycroft_mark_1'
    // Override: SYSTEM (set by specific enclosures)
    // "platform": "picroft",
    // "platform_enclosure_path": "/etc/myenclosure/code.py",
    "platform": "mycroft_mark_2",

    // Skill to show on idle
    "idle_display_skill": "homescreen.mark2",

    // Skills to check (in order) for idle override before idle_display_skill
    "idle_skill_overrides": [
      "microphone.mark2",
      "timer.mark2",
      "news.mark2",
      "play-music.mark2",
      "play-radio.mark2"
    ],

    // Path to Unix domain socket for awconnect (hotspot) server
    "awconnect_socket_path": "/awconnect/tmp/mycroft_socket",

    // Whether to insist on pairing to Selene. If False, will give up on failure
    "insist_on_selene_pair": False
  },

  // Level of logs to store, one of  "CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"
  "log_level": "DEBUG",

  // Format of logs to store.
  "log_format": "%(levelname)s:%(name)s:%(message)s",

  // Speech to Text parameters
  // Override: REMOTE
  "stt": {
    // mycroft, coqui_stt_plug, or vosk_stt_plug
    "module": "mycroft"
  },

  // Text to Speech parameters
  // Override: REMOTE
  "tts": {
    // dummy or mimic3_tts_plug
    "module": "mimic3_tts_plug"
  },

  "padatious": {
    "intent_cache": "~/.local/share/mycroft/intent_cache",
    "train_delay": 2,
    "single_thread": true
  },

  "Audio": {
    "backends": {
      "local": {
        "type": "simple",
        "active": true
      },
      "vlc": {
        "type": "vlc",
        "active": true,
        "duck": true
      }
    },
    "default-backend": "local"
  },

  "debug": false
}
